{"version":3,"sources":["Home.js","CafeList.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","inputField","width","margin","spacing","Home","classes","useForm","register","handleSubmit","errors","reset","onSubmit","data","e","a","preventDefault","cafeName","cityName","pin","drinks","fetch","method","header","body","JSON","stringify","res","alert","history","useHistory","style","textAlign","color","fontSize","fontWeight","TextField","placeholder","label","variant","fullWidth","className","name","inputRef","required","minLength","value","message","error","Boolean","helperText","type","FormControl","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","FormHelperText","Button","marginLeft","onClick","push","CafeList","fetchURL","useState","list","setList","useEffect","axios","get","response","fetchData","console","log","align","Object","keys","map","key","App","path","exact","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ec6f34cc.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  TextField,\n  FormControlLabel,\n  FormLabel,\n  FormControl,\n  RadioGroup,\n  Radio,\n  Button,\nFormHelperText\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputField: {\n    width: \"100%\",\n    margin: theme.spacing(1, 0),\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const { register, handleSubmit, errors,reset} = useForm();\n  const onSubmit = async (data, e) => {\n    e.preventDefault();\n    const { cafeName, cityName, pin, drinks } = data;\n    const res = await fetch(\n      \"https://cafe-c25a8-default-rtdb.firebaseio.com/cafeBigstore.json\",\n      {\n        method: \"POST\",\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          cafeName,\n          cityName,\n          pin,\n          drinks,\n        }),\n      }\n    );\n    reset(res);\n    alert('cafe has been added');\n\n    \n    \n  };\n  let history = useHistory();\n\n  function handleClick() {\n    history.push(\"/CafeList\");\n  }\n\n  return (\n    <>\n    <h1 style={{textAlign:'center', color:'grey', fontSize:'30px', fontWeight:'bold'}}>CAFE ENTERIES </h1>\n      <form\n        style={{ width: \"50%\", margin: \"auto\" }}\n        onSubmit={handleSubmit(onSubmit)}\n        method=\"POST\"\n      >\n        {/* 1) TextField */}\n        <TextField\n          placeholder=\"Enter  Cafe Name\"\n          label=\"Cafe Name\"\n          variant=\"outlined\"\n          fullWidth\n          className={classes.inputField}\n          name=\"cafeName\"\n          inputRef={register({\n            required: \"this field is required.\",\n            minLength: {\n              value: 3,\n              message: \"Length must be  3 characters\",\n            },\n          })}\n          error={Boolean(errors?.cafeName)}\n          helperText={errors.cafeName?.message}\n        />\n\n        {/* 2) TextField */}\n        <TextField\n          placeholder=\"Enter Your City Name\"\n          label=\"City Name\"\n          variant=\"outlined\"\n          fullWidth\n          className={classes.inputField}\n          name=\"cityName\"\n          inputRef={register({\n            required: \"this field is required.\",\n            minLength: {\n              value: 3,\n              message: \"Length must be  3 characters\",\n            },\n          })}\n          error={Boolean(errors?.cityName)}\n          helperText={errors.cityName?.message}\n        />\n\n        {/* 4) TextField */}\n        <TextField\n          placeholder=\"Enter pinCode\"\n          label=\"PinCode\"\n          variant=\"outlined\"\n          type=\"number\"\n          fullWidth\n          className={classes.inputField}\n          name=\"pin\"\n          inputRef={register({\n            required: \"this field is required.\",\n            minLength: {\n              value: 3,\n              message: \"Length must be  3 characters\",\n            },\n          })}\n          error={Boolean(errors?.pin)}\n          helperText={errors.pin?.message}\n        />\n\n        {/* Radio Buttons */}\n        <FormControl className={classes.inputField} error={Boolean(errors.drinks)}>\n          <FormLabel>Choose Drinks </FormLabel>\n          <RadioGroup row name=\"drinks\">\n            <FormControlLabel\n              value=\"<5\"\n              control={<Radio inputRef={register({\nrequired:\"choose drinks option\"\n              })} />}\n              label=\"drinks < 5\"\n            />\n            <FormControlLabel\n              value=\">5\"\n              control={<Radio inputRef={register({\n                required:\"choose drinks option\"\n                              })} />}\n              label=\"drinks > 5\"\n            />\n          </RadioGroup>\n<FormHelperText>{errors.drinks?.message}</FormHelperText>\n        </FormControl>\n\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          add new cafe\n        </Button>\n        <Button style={{marginLeft:'5%'}} variant=\"contained\" color=\"secondary\" onClick={handleClick}>\n          Cafe Information\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nconst CafeList = () => {\r\n  const fetchURL =\r\n    \"https://cafe-c25a8-default-rtdb.firebaseio.com/cafeBigstore.json\";\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(fetchURL);\r\n      setList(response.data);\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n  console.log(list);\r\n\r\n  let history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <>\r\n      <h1 align=\"center\">Cafe Information</h1>\r\n      <table>\r\n        <thead>\r\n          <th>Cafe Name</th>\r\n          <th>City Name</th>\r\n          <th>Drinks</th>\r\n          <th>Pin Code</th>\r\n        </thead>\r\n\r\n\r\n\r\n        {Object.keys(list).map((key) => (\r\n          <tbody>\r\n            {/* <li key={key}>\r\n              <label>Cafe Name:</label>\r\n              {list[key].cafeName} <br />\r\n              <label>City Name:</label>\r\n              {list[key].cityName} <br />\r\n              <label>Dinks:</label>\r\n              {list[key].drinks} <br />\r\n              <label>PinCode:</label>\r\n              {list[key].pin}\r\n              <br />\r\n            </li> */}\r\n           \r\n            <tr key={key}>\r\n                 <td>{list[key].cafeName}</td>\r\n                 <td>{list[key].cityName}</td>\r\n                 <td>{list[key].drinks}</td>\r\n                 <td>{list[key].pin}</td>\r\n\r\n            </tr>\r\n          </tbody>\r\n        ))}\r\n      </table>\r\n      <center>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\r\n          Go Back\r\n        </Button>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CafeList;\r\n","import \"./styles/App.css\";\n\nimport Home from \"./Home\";\nimport CafeList from \"./CafeList\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route exact path=\"/CafeList\" component={CafeList} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}